// ---------------------------------------
// mflux.config.jsonc
// Configuration for Mflux application
// ---------------------------------------

{
    // Logging level codes
    // TRACE    : 0   Most detailed
    // DEBUG    : 1
    // INFO     : 2
    // WARNING  : 3
    // ERROR    : 4   Most concise

    // Logging Directory
    // -----------------------------------
    // Specify the directory where to want MFlux to save its runtime logs. The
    // log file will be named as mflux.log.
    // e.g.: "log_dir" : "./out/log"
    "log_dir": "./out/log",

    // Logging Level
    // -----------------------------------
    // Specify the verbosity of logs you want MFlux to generate in log file. This
    // logging is independent of logs MFlux prints on console. Details on log level
    // is present at the top of this file. 
    // e.g.: "log_level" : 1
    "log_level" : 1,

    // [NOT CURRENTLY USED] Enable Watchdog
    // -----------------------------------
    // Specify whether to use watchdog to monitor application crashes and restart
    // sequence.
    // e.g.: "watchdog_on" : true
    "watchdog_on" : false,
    
    // [NOT CURRENTLY USED] Watchdog Timeout
    // -----------------------------------
    // Specify the number of seconds to wait before invoking the watchdog.
    // e.g.: "watchdog_timeout_s" : 50
    "watchdog_timeout_s" : 60,
    
    // [NOT CURRENTLY USED] Watchdog Process
    // -----------------------------------
    // Specify the path to watchdog binary or batch file that will be invoked to
    // start the watchdog
    // e.g.: "watchdog_command" : "/root/bin/mflux/watchdog" 
    "watchdog_command" : "",
    
    // [NOT CURRENTLY USED] Watchdog Log Level
    // -----------------------------------
    // Specify the verbosity of logs generated by the Watchdog process. Details
    // on log level are present at the top of this file.
    // e.g.: "watchdog_log_level" : 2
    "watchdog_log_level" : 2,

    
    
    // Enable MQTT
    // -----------------------------------
    // Specify whether to use MQTT module and networking in MFlux or not. This
    // config is helpful during debug process. None of the following MQTT config
    // values will be used if MQTT is disabled here.
    // e.g.: "mqtt_on" : true
    "mqtt_on" : true,
    
    // [NOT CURRENTLY USED] MQTT logging level
    // -----------------------------------
    // Specify the verbosity of logs generated by the watchdog process. Details
    // on log level are present at the top of this file.
    // e.g.: "mqtt_log_level" : 0
    "mqtt_log_level" : 0,
    
    // MQTT Client
    // -----------------------------------
    // MFlux creates an internal MQTT client to perform communication operations
    // over the MQTT network. Here you can specify the name of this MQTT client.
    // This is useful in monitoring MQTT network operations using third-party
    // applications where you'd be easily able to locate the MFlux's MQTT client.
    // e.g.: "mqtt_client_name" : "mqttc_mflux"
    "mqtt_client_name" : "mqttc_mflux",
    
    // MQTT Clean Connection
    // -----------------------------------
    // Specify whether you want MFlux's MQTT client to request the MQTT broker
    // for a clean (non-persistent) connection or not. This happens only once,
    // during MFlux's startup. Then clean connection is set to be true, the bro-
    // ker will not store any subscription information or undelivered messages 
    // for the client. 
    // Details: www.steves-internet-guide.com/mqtt-clean-sessions-example/
    // e.g.: "mqtt_is_clean" : false
    "mqtt_is_clean" : true,
    
    // MQTT Broker host address
    // -----------------------------------
    // Specify the address of the machine (remote or local) that is hosting the
    // MQTT broker.
    // e.g.: "mqtt_host" : "192.168.1.1"
    "mqtt_host" : "",
    
    // MQTT Broker port number
    // -----------------------------------
    // Specify the port number to access the MQTT broker on the host machine
    // e.g.: "mqtt_port" : 1883
    "mqtt_port" : 1883,
    
    // [NOT CURRENTLY USED] MQTT Timeout
    // -----------------------------------
    // MFlux runs the MQTT Client as a service and it is quite possible for a
    // service to terminate or lose connection with remote. Sometimes the conne-
    // ction is present but the Client won't receive any messages from the brok-
    // er. It can happen due to many reasons but on the client's end it could be
    // due to internal cache or buffer corruptions. To resolve this, a service 
    // restart is required. So here you specify the time in seconds for which t-
    // he internal service watchdog will wait before restarting the MQTT service
    // e.g.: "mqtt_timeout_s" : 60
    "mqtt_timeout_s" : 0,
    
    // MQTT Client username
    // -----------------------------------
    // Some MQTT brokers require authentication details in a form of username and
    // password before confirming a connection with a client. If the broker you
    // are connecting to requires a username for a client, you specify it here.
    // MFlux, on startup, will use the following username (along with password) 
    // to establish connection with broker. If no authentication is required at
    // the broker then, this config can be set as an empty string.
    // e.g.: mqtt_username : "admin",
    "mqtt_username" : "",
    
    // MQTT Client password
    // -----------------------------------
    // Specify the password string that will be used (along with username) to
    // establish connection with Broker that requires authentication. If no auth
    // is required at the broker, then this config can be set as empty string. 
    // e.g.: "mqtt_password" : "hesoyam2005"
    "mqtt_password" : "",
    
    // MQTT Subscriptions
    // -----------------------------------
    // Specify the MQTT topic(s) MFlux will subscribe to upon successful connec-
    // tion with the MQTT broker. The MQTT Client can subscribe to multiple top-
    // ics at once. This config is an array variable that contains objects spec-
    // ifying details of each subscription.
    // e.g. : "mqtt_sub_list" : [
    //    {
    //        "topic" : "BASSAI",
    //        "qos" : 0,
    //        "retain" : false
    //    },
    //    {
    //        "topic" : "SMSCPMS",
    //        "qos" : 0,
    //        "retain" : false
    //    }
    // ]
    "mqtt_sub_list" : [],


    
    // Enable Influx
    // -----------------------------------
    // Specify whether to use Influx module in MFlux or not. This config is hel-
    // pful during debug process where you might want to isolate a module ops. 
    // None of the following Influx config values will be used if Influx is 
    // disabled here.
    // e.g.: "mqtt_on" : true
    "influx_on" : true,
    
    // [NOT CURRENTLY USED] Influx logging level
    // -----------------------------------
    // Specify the verbosity of logs generated by the watchdog process. Details
    // on log level are present at the top of this file.
    // e.g.: "influx_log_level" " 0
    "influx_log_level" : 0,
    
    // Influx Client
    // -----------------------------------
    // MFlux creates an internal Influx client to perform read/write operations
    // on the InfluxDB. Here you can specify the name of this Influx client. This
    // is useful in monitoring Influx I/O operations using third-party apps where
    // you'd be easily be able to locate who wrote a particular measurement.
    // e.g.: "influx_client_name" : "influxc_mflux"
    "influx_client_name" : "influxc_mflux",
    
    // InfluxDB host address
    // -----------------------------------
    // Specify the address of the machine (remote or local) that is hosting the
    // InfluxDB instance.
    // e.g.: "influx_host" : "192.168.1.1"
    "influx_host" : "192.168.1.1",
    
    // InfluxDB port number
    // -----------------------------------
    // Specify the port number to access the InfluxDB on the host machine
    // e.g.: "influx_port" : 8086
    "influx_port" : 8086,
    
    // [NOT CURRENTLY USED] Influx Timeout
    // -----------------------------------
    // MFlux runs the Influx Client as a service and it is quite possible for a
    // service to terminate or lose connection with remote. Sometimes the conne-
    // ction is present but the Client won't be able to perform normally. It can
    // happen due to many reasons but on the client's end it's generally due to 
    // some cache or buffer corruptions. To resolve this, a service restart is 
    // often required. So here you specify the time in seconds for which the 
    // internal service watchdog will wait before restarting the Influx service.
    // e.g.: "influx_timeout_s" : 60
    "influx_timeout_s" : 0,
    
    // InfluxDB organization name
    // -----------------------------------
    // Since Influx v2.x, every InfluxDB is orderd in a simple heirarchy like
    // this. Organization -> Bucket / DB -> Measurements.
    // Specify the organization name where your database resides.
    // But if your InfluxDB is of v1.x then there is no organization category in
    // the database. So in that case you can omit writing the organization name
    // and keep this as an empty string.
    // e.g.: "influx_org_name" : "felidae"
    "influx_org_name" : "",
    
    // InfluxDB Bucket / DB name
    // -----------------------------------
    // Specify the name of bucket / database where you want MFlux to write
    // measurements. This configuration should not be empty.
    // e.g.: "influx_db_name" : "mydb"
    "influx_db_name" : "",

    // [NOT CURRENTLY USED] InfluxDB retention policy name
    // -----------------------------------
    // Specify the name of custom retention policy MFlux should consider while
    // writing the measurements to InfluxDB. To use default retention policy
    // 'autogen' you can keep this config as empty string or write is explicitly.
    // e.g.: "influx_rp_name" : "autogen"
    "influx_rp_name" : "",
    
    // InfluxDB username
    // -----------------------------------
    // If the InfluxDB you are writing measurements to requires a username, you
    // specify it here. MFlux will use this username (along with password) every
    // time it writes a measurement to the database. If no authentication is
    // required at the broker then, this config can be set as an empty string.
    // This is optional in InfluxDB v1.x but required in v2.x and further.
    // e.g.: "influx_db_username" : "admin"
    "influx_db_username" : "",
    
    // InfluxDB password
    // -----------------------------------
    // Specify the password string that will be used (along with username) to
    // write measurements to InfluxDB remote that requires authentication. If
    // no auth is required at the broker, then this config can be set as an empty
    // tring. This is optional in InfluxDB v1.x but required in v2.x and further
    // e.g.: "influx_db_password" : "chittychittybangbang"
    "influx_db_password" : "",
    
    // InfluxDB API access key
    // -----------------------------------
    // MFlux writes measurments to InfluxDB using HTTP connection and line
    // protocol. This method sometimes require client to provide an 'access token'
    // (along with username and password) as generated by the database during
    // every write request.
    // This config can be set to an empty string if you are using InfluxDB v1.x
    // where API authentication wasn't required. But it is required if you are
    // using InfluxDB v2.x and further.
    // e.g.: "influx_db_auth_key" : "0u4tQrkNIqYcSvaSFRQD"
    // Config example
    "influx_db_auth_key" : ""
}
